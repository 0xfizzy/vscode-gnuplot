<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>gp</string>
		<string>gnuplot</string>
		<string>gnu</string>
		<string>plot</string>
    <string>plt</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~G</string>
	<key>name</key>
	<string>gnuplot</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_single</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_double</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(for)\b\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.iteration.gnuplot</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.range.begin.gnuplot</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>gnuplot iteration statement.
			There are two forms:
			    numeric [n = 1:2{:inc}]
			    string based [str in "x y z"]
			    but both can also iterate over lists etc, so this is kept loose.</string>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.range.end.gnuplot</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.iteration.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_single</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
					<key>name</key>
					<string>punctuation.separator.range.gnuplot</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([a-zA-Z]\w*)\b\s*(=|in)</string>
					<key>name</key>
					<string>variable-assignment.range.gnuplot</string>
				</dict>
				<!-- <dict>
					<key>match</key>
					<string>(?i:[^\s(pi|e)\]])</string>
					<key>name</key>
					<string>invalid.illegal.expected-range-separator.gnuplot</string>
				</dict> -->
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.range.begin.gnuplot</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>gnuplot range statement [a:b]. Lots of things are legal, still more make no sense!</string>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.range.end.gnuplot</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.range.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
					<key>name</key>
					<string>punctuation.separator.range.gnuplot</string>
				</dict>
				<!-- <dict>
					<key>match</key>
					<string>(?i:[^\s(pi|e)\]])</string>
					<key>name</key>
					<string>invalid.illegal.expected-range-separator.gnuplot</string>
				</dict> -->
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.gnuplot</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.gnuplot</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!\$)(#)(?!\{).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.gnuplot</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>introduce in gnuplot 4.3.</string>
			<key>match</key>
			<string>for</string>
			<key>name</key>
			<string>keyword.other.iteration.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(angles|arrow|autoscale|bind|bmargin|border|boxwidth|color|colorsequence|clabel|clip|cntrlabel|cntrparam|colorbox|colornames|contour|dashtype|datastyle|datafile|decimalsign|dgrid3d|dummy|encoding|errorbars|fit|fontpath|format|functionstyle|functions|grid|hidden3d|historysize|history|isosamples|jitter|key|label|linetype|link|lmargin|loadpath|locale|logscale|macros|mapping|margin|micro|minussign|monochrome|mouse|mttics|multiplot|mx2tics|mxtics|my2tics|mytics|mztics|nonlinear|object|offsets|origin|output|parametric|paxis|plot|pm3d|palette|pointintervalbox|pointsize|polar|print|psdir|raxis|rgbmax|rlabel|rmargin|rrange|rtics|samples|size|style|surface|table|terminal|termoption|theta|tics|ticslevel|ticscale|timestamp|timefmt|title|tmargin|trange|ttics|urange|variables|version|view|vrange|x2data|x2dtics|x2label|x2mtics|x2range|x2tics|x2zeroaxis|xdata|xdtics|xlabel|xl|xmtics|xrange|xr|xtics|xyplane|xzeroaxis|y2data|y2dtics|y2label|y2mtics|y2range|y2tics|y2zeroaxis|ydata|ydtics|ylabel|yl|ymtics|yrange|yr|ytics|yzeroaxis|zdata|zdtics|zzeroaxis|cbdata|cbdtics|zero|zeroaxis|zlabel|zl|zmtics|zrange|zr|ztics|cblabel|cbl|cbmtics|cbrange|cbr|cbtics)\b</string>
			<key>name</key>
			<string>keyword.other.setting.gnuplot</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>missuse of scopes alert! Just for pretty colours</string>
			<key>match</key>
			<string>\b(break|cd|call|clear|continue|do|evaluate|exit|fit|help|history|if|for|import|load|lower|pause|plot|print|printerr|pwd|quit|raise|refresh|replot|reread|reset|save|set|show|shell|splot|stats|syste|test|toggle|undefine|unset|update|while|FIT_LIMIT|FIT_MAXITER|FIT_START_LAMBDA|FIT_LAMBDA_FACTOR|FIT_LOG|FIT_SCRIPT|!|functions|var)\b</string>
			<key>name</key>
			<string>keyword.other.command.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(abs|acos|acosh|arg|asin|asinh|atan|atan2|atanh|besj0|besj1|besy0|besy1|ceil|cos|cosh|erf|erfc|exp|floor|gamma|ibeta|igamma|imag|int|inverf|invnorm|lambertw|lgamma|log|log10|norm|rand|real|sgn|sin|sinh|sqrt|tan|tanh)\b</string>
			<key>name</key>
			<string>support.function.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(gprintf|sprintf|strlen|strstrt|substr|system|word|words)\b</string>
			<key>name</key>
			<string>support.function.string.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(on|off|default|inside|outside|lmargin|rmargin|tmargin|bmargin|at|left|right|center|top|bottom|center|vertical|horizontal|Left|Right|noreverse|noinvert|samplen|spacing|width|height|noautotitle|columnheader|title|noenhanced|nobox|linestyle|ls|linetype|lt|linewidth|lw)\b</string>
			<key>name</key>
			<string>constant.other.type.gnuplot</string>
		</dict>
		<dict>
			<key>comments</key>
			<string>These are the terminal types available on my system -- there are probably a lot more</string>
			<key>match</key>
			<string>\b(aed512|aed767|aifm|aqua|bitgraph|canvas|cgm|corel|dumb|dxf|eepic|emf|emtex|eps|epslatex|epson_180dpi|epson_60dpi|epson_lx800|fig|gif|gpic|hp2623A|hp2648|hp500c|hpdj|hpgl|hpljii|hppj|imagen|jpeg|kc_tek40xx|km_tek40xx|latex|mf|mif|mp|nec_cp6|okidata|pbm|pcl5|pdf|png|pngcairo|postscript|pslatex|pstex|pstricks|qms|regis|selanar|starc|svg|tandy_60dpi|tek40xx|tek410x|texdraw|tgif|tkcanvas|tpic|unknown|vttek)\b</string>
			<key>name</key>
			<string>constant.other.terminal.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(u(sing)?|t(it(le)?)?|notit(le)?|w(i(th)?)?|steps|fs(teps)?|notitle|l(i(nes)?)?|linespoints|via)\b</string>
			<key>name</key>
			<string>keyword.modifier.gnuplot</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>user defined function / variable</string>
			<key>match</key>
			<string>(?x:
				        \b                      # Start with a word boundary
				        (?=\b[\w$]*(\(|.*=|\s))	# Look-ahead for a bracket or equals or a white space
				        (?![^(]*\))	            # negative look ahead for a closing bracket without an opening one. This stops a from matching in f(a)
				        (					              # Group variable name
					        [A-Za-z] 			        # A letter
					        [\w$]*	 		          # Any alphanumeric or $
				        )					              # That is it for the name.
			        )</string>
			<key>name</key>
			<string>variable.other.gnuplot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if)\b</string>
			<key>name</key>
			<string>keyword.control.gnuplot</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(show)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.command.gnuplot</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>keyword.line.show.gnuplot</string>
			<key>end</key>
			<string>(?!\#)($\n?)</string>
			<key>name</key>
			<string>keyword.line.show.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(set)\b\s*\b(terminal)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.command.gnuplot</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.setting.gnuplot</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\#)($\n?)</string>
			<key>name</key>
			<string>keyword.line.set.terminal.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(set)\b\s*\b(key)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.command.gnuplot</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.setting.gnuplot</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\#)($\n?)</string>
			<key>name</key>
			<string>keyword.line.set.key.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(set)\b\s*(?!\b(terminal|key|for)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.command.gnuplot</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.setting.gnuplot</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>keyword.line.set.gnuplot</string>
			<key>end</key>
			<string>(?!\#)($\n?)</string>
			<key>name</key>
			<string>keyword.line.set.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>number</key>
		<dict>
			<key>comment</key>
			<string>borrowed from textmate book</string>
			<key>match</key>
			<string>(?x:         # turn on extended mode
                -?         # an optional minus
                (?:
                  [0-9]    # a 0-9 character
                  \d*      # followed by zero or more digits
                )
                (?:
                  \.       # a period
                  \d+      # followed by one or more digits
                )?         # make decimal portion optional
                (?:
                  [eE]   # an e character
                  [+-]?  # followed by an option +/-
                  \d+    # followed by one or more digits
                  (?:
                    \.   # a period
                    \d+  # followed by one or more digits
                  )?     # make decimal in exponent power optional
                )?       # make exponent optional
              )</string>
			<key>name</key>
			<string>constant.numeric.gnuplot</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>comment</key>
			<string>Operator symbols</string>
			<key>match</key>
			<string>\s*(==|~=|&gt;|&gt;=|&lt;|&lt;=|&amp;|&amp;&amp;|:|\||\|\||\+|-|\*|\.\*|/|\./|\\|\.\\|\^|\.\^)\s*</string>
			<key>name</key>
			<string>keyword.operator.symbols.matlab</string>
		</dict>
		<key>string_double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.gnuplot</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.gnuplot</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.gnuplot</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\$`"\\\n]</string>
					<key>name</key>
					<string>constant.character.escape.gnuplot</string>
				</dict>
			</array>
		</dict>
		<key>string_single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.gnuplot</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.gnuplot</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.gnuplot</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.gnuplot</string>
	<key>uuid</key>
	<string>A27F93D4-2AE3-4950-851E-8FA19D3CF999</string>
</dict>
</plist>
